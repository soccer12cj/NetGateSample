//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace NetGateSample.Iats.NetGate.Reportingv1 {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ReportLinkSoap", Namespace="https://www.iatspayments.com/NetGate/")]
    public partial class ReportLink : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetCCJournalCSVOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCCPaymentBoxJournalCSVV2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCCPaymentBoxJournalCSVOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCreditCardBankReconciliationReportCSVOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCreditCardJournalCSVOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCreditCardJournalOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCreditCardPaymentBoxJournalCSVOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCreditCardPaymentBoxJournalCSVV2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCreditCardPaymentBoxRejectCSVOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCreditCardPaymentBoxRejectCSVV2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCreditCardRejectCSVOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCreditCardRejectOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetACHEFTBankReconciliationReportCSVOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetACHEFTJournalCSVOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetACHEFTJournalOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetACHEFTPaymentBoxJournalCSVOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetACHEFTPaymentBoxJournalCSVV2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetACHEFTPaymentBoxJournalCSVV3OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetACHEFTPaymentBoxJournalCSV1OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetACHEFTPaymentBoxRejectCSVOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetACHEFTPaymentBoxRejectCSVV2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetACHEFTPaymentBoxReturnCSVV1OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetACHEFTRejectCSVOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetACHEFTRejectOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetACHEFTReturnCSVOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetACHEFTReturnOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetACHJournalCSVOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ReportLink() {
            this.Url = global::NetGateSample.Properties.Settings.Default.NetGateSample_Iats_NetGate_Reportingv1_ReportLink;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetCCJournalCSVCompletedEventHandler GetCCJournalCSVCompleted;
        
        /// <remarks/>
        public event GetCCPaymentBoxJournalCSVV2CompletedEventHandler GetCCPaymentBoxJournalCSVV2Completed;
        
        /// <remarks/>
        public event GetCCPaymentBoxJournalCSVCompletedEventHandler GetCCPaymentBoxJournalCSVCompleted;
        
        /// <remarks/>
        public event GetCreditCardBankReconciliationReportCSVCompletedEventHandler GetCreditCardBankReconciliationReportCSVCompleted;
        
        /// <remarks/>
        public event GetCreditCardJournalCSVCompletedEventHandler GetCreditCardJournalCSVCompleted;
        
        /// <remarks/>
        public event GetCreditCardJournalCompletedEventHandler GetCreditCardJournalCompleted;
        
        /// <remarks/>
        public event GetCreditCardPaymentBoxJournalCSVCompletedEventHandler GetCreditCardPaymentBoxJournalCSVCompleted;
        
        /// <remarks/>
        public event GetCreditCardPaymentBoxJournalCSVV2CompletedEventHandler GetCreditCardPaymentBoxJournalCSVV2Completed;
        
        /// <remarks/>
        public event GetCreditCardPaymentBoxRejectCSVCompletedEventHandler GetCreditCardPaymentBoxRejectCSVCompleted;
        
        /// <remarks/>
        public event GetCreditCardPaymentBoxRejectCSVV2CompletedEventHandler GetCreditCardPaymentBoxRejectCSVV2Completed;
        
        /// <remarks/>
        public event GetCreditCardRejectCSVCompletedEventHandler GetCreditCardRejectCSVCompleted;
        
        /// <remarks/>
        public event GetCreditCardRejectCompletedEventHandler GetCreditCardRejectCompleted;
        
        /// <remarks/>
        public event GetACHEFTBankReconciliationReportCSVCompletedEventHandler GetACHEFTBankReconciliationReportCSVCompleted;
        
        /// <remarks/>
        public event GetACHEFTJournalCSVCompletedEventHandler GetACHEFTJournalCSVCompleted;
        
        /// <remarks/>
        public event GetACHEFTJournalCompletedEventHandler GetACHEFTJournalCompleted;
        
        /// <remarks/>
        public event GetACHEFTPaymentBoxJournalCSVCompletedEventHandler GetACHEFTPaymentBoxJournalCSVCompleted;
        
        /// <remarks/>
        public event GetACHEFTPaymentBoxJournalCSVV2CompletedEventHandler GetACHEFTPaymentBoxJournalCSVV2Completed;
        
        /// <remarks/>
        public event GetACHEFTPaymentBoxJournalCSVV3CompletedEventHandler GetACHEFTPaymentBoxJournalCSVV3Completed;
        
        /// <remarks/>
        public event GetACHEFTPaymentBoxJournalCSV1CompletedEventHandler GetACHEFTPaymentBoxJournalCSV1Completed;
        
        /// <remarks/>
        public event GetACHEFTPaymentBoxRejectCSVCompletedEventHandler GetACHEFTPaymentBoxRejectCSVCompleted;
        
        /// <remarks/>
        public event GetACHEFTPaymentBoxRejectCSVV2CompletedEventHandler GetACHEFTPaymentBoxRejectCSVV2Completed;
        
        /// <remarks/>
        public event GetACHEFTPaymentBoxReturnCSVV1CompletedEventHandler GetACHEFTPaymentBoxReturnCSVV1Completed;
        
        /// <remarks/>
        public event GetACHEFTRejectCSVCompletedEventHandler GetACHEFTRejectCSVCompleted;
        
        /// <remarks/>
        public event GetACHEFTRejectCompletedEventHandler GetACHEFTRejectCompleted;
        
        /// <remarks/>
        public event GetACHEFTReturnCSVCompletedEventHandler GetACHEFTReturnCSVCompleted;
        
        /// <remarks/>
        public event GetACHEFTReturnCompletedEventHandler GetACHEFTReturnCompleted;
        
        /// <remarks/>
        public event GetACHJournalCSVCompletedEventHandler GetACHJournalCSVCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.iatspayments.com/NetGate/GetCCJournalCSV V1", RequestElementName="GetCCJournalCSV V1", RequestNamespace="https://www.iatspayments.com/NetGate/", ResponseElementName="GetCCJournalCSV V1Response", ResponseNamespace="https://www.iatspayments.com/NetGate/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetCCJournalCSV V1Result", DataType="base64Binary")]
        public byte[] GetCCJournalCSV(string agentCode, string password, System.DateTime date) {
            object[] results = this.Invoke("GetCCJournalCSV", new object[] {
                        agentCode,
                        password,
                        date});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCCJournalCSVAsync(string agentCode, string password, System.DateTime date) {
            this.GetCCJournalCSVAsync(agentCode, password, date, null);
        }
        
        /// <remarks/>
        public void GetCCJournalCSVAsync(string agentCode, string password, System.DateTime date, object userState) {
            if ((this.GetCCJournalCSVOperationCompleted == null)) {
                this.GetCCJournalCSVOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCCJournalCSVOperationCompleted);
            }
            this.InvokeAsync("GetCCJournalCSV", new object[] {
                        agentCode,
                        password,
                        date}, this.GetCCJournalCSVOperationCompleted, userState);
        }
        
        private void OnGetCCJournalCSVOperationCompleted(object arg) {
            if ((this.GetCCJournalCSVCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCCJournalCSVCompleted(this, new GetCCJournalCSVCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.iatspayments.com/NetGate/GetCCPaymentBoxJournalCSVV2", RequestNamespace="https://www.iatspayments.com/NetGate/", ResponseNamespace="https://www.iatspayments.com/NetGate/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetCCPaymentBoxJournalCSVV2(string agentCode, string password, System.DateTime from, System.DateTime to, int startIndex, int endIndex) {
            object[] results = this.Invoke("GetCCPaymentBoxJournalCSVV2", new object[] {
                        agentCode,
                        password,
                        from,
                        to,
                        startIndex,
                        endIndex});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCCPaymentBoxJournalCSVV2Async(string agentCode, string password, System.DateTime from, System.DateTime to, int startIndex, int endIndex) {
            this.GetCCPaymentBoxJournalCSVV2Async(agentCode, password, from, to, startIndex, endIndex, null);
        }
        
        /// <remarks/>
        public void GetCCPaymentBoxJournalCSVV2Async(string agentCode, string password, System.DateTime from, System.DateTime to, int startIndex, int endIndex, object userState) {
            if ((this.GetCCPaymentBoxJournalCSVV2OperationCompleted == null)) {
                this.GetCCPaymentBoxJournalCSVV2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCCPaymentBoxJournalCSVV2OperationCompleted);
            }
            this.InvokeAsync("GetCCPaymentBoxJournalCSVV2", new object[] {
                        agentCode,
                        password,
                        from,
                        to,
                        startIndex,
                        endIndex}, this.GetCCPaymentBoxJournalCSVV2OperationCompleted, userState);
        }
        
        private void OnGetCCPaymentBoxJournalCSVV2OperationCompleted(object arg) {
            if ((this.GetCCPaymentBoxJournalCSVV2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCCPaymentBoxJournalCSVV2Completed(this, new GetCCPaymentBoxJournalCSVV2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.iatspayments.com/NetGate/GetCCPaymentBoxJournalCSV V1", RequestElementName="GetCCPaymentBoxJournalCSV V1", RequestNamespace="https://www.iatspayments.com/NetGate/", ResponseElementName="GetCCPaymentBoxJournalCSV V1Response", ResponseNamespace="https://www.iatspayments.com/NetGate/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetCCPaymentBoxJournalCSV V1Result", DataType="base64Binary")]
        public byte[] GetCCPaymentBoxJournalCSV(string agentCode, string password, System.DateTime from, System.DateTime to) {
            object[] results = this.Invoke("GetCCPaymentBoxJournalCSV", new object[] {
                        agentCode,
                        password,
                        from,
                        to});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCCPaymentBoxJournalCSVAsync(string agentCode, string password, System.DateTime from, System.DateTime to) {
            this.GetCCPaymentBoxJournalCSVAsync(agentCode, password, from, to, null);
        }
        
        /// <remarks/>
        public void GetCCPaymentBoxJournalCSVAsync(string agentCode, string password, System.DateTime from, System.DateTime to, object userState) {
            if ((this.GetCCPaymentBoxJournalCSVOperationCompleted == null)) {
                this.GetCCPaymentBoxJournalCSVOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCCPaymentBoxJournalCSVOperationCompleted);
            }
            this.InvokeAsync("GetCCPaymentBoxJournalCSV", new object[] {
                        agentCode,
                        password,
                        from,
                        to}, this.GetCCPaymentBoxJournalCSVOperationCompleted, userState);
        }
        
        private void OnGetCCPaymentBoxJournalCSVOperationCompleted(object arg) {
            if ((this.GetCCPaymentBoxJournalCSVCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCCPaymentBoxJournalCSVCompleted(this, new GetCCPaymentBoxJournalCSVCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.iatspayments.com/NetGate/GetCreditCardBankReconciliationReportCSVV1", RequestElementName="GetCreditCardBankReconciliationReportCSVV1", RequestNamespace="https://www.iatspayments.com/NetGate/", ResponseElementName="GetCreditCardBankReconciliationReportCSVV1Response", ResponseNamespace="https://www.iatspayments.com/NetGate/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetCreditCardBankReconciliationReportCSVV1Result")]
        public System.Xml.XmlNode GetCreditCardBankReconciliationReportCSV(string agentCode, string password, System.DateTime fromDate, System.DateTime toDate, string currency, bool summaryOnly, string customerIPAddress) {
            object[] results = this.Invoke("GetCreditCardBankReconciliationReportCSV", new object[] {
                        agentCode,
                        password,
                        fromDate,
                        toDate,
                        currency,
                        summaryOnly,
                        customerIPAddress});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetCreditCardBankReconciliationReportCSVAsync(string agentCode, string password, System.DateTime fromDate, System.DateTime toDate, string currency, bool summaryOnly, string customerIPAddress) {
            this.GetCreditCardBankReconciliationReportCSVAsync(agentCode, password, fromDate, toDate, currency, summaryOnly, customerIPAddress, null);
        }
        
        /// <remarks/>
        public void GetCreditCardBankReconciliationReportCSVAsync(string agentCode, string password, System.DateTime fromDate, System.DateTime toDate, string currency, bool summaryOnly, string customerIPAddress, object userState) {
            if ((this.GetCreditCardBankReconciliationReportCSVOperationCompleted == null)) {
                this.GetCreditCardBankReconciliationReportCSVOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCreditCardBankReconciliationReportCSVOperationCompleted);
            }
            this.InvokeAsync("GetCreditCardBankReconciliationReportCSV", new object[] {
                        agentCode,
                        password,
                        fromDate,
                        toDate,
                        currency,
                        summaryOnly,
                        customerIPAddress}, this.GetCreditCardBankReconciliationReportCSVOperationCompleted, userState);
        }
        
        private void OnGetCreditCardBankReconciliationReportCSVOperationCompleted(object arg) {
            if ((this.GetCreditCardBankReconciliationReportCSVCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCreditCardBankReconciliationReportCSVCompleted(this, new GetCreditCardBankReconciliationReportCSVCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.iatspayments.com/NetGate/GetCreditCardJournalCSVV1", RequestElementName="GetCreditCardJournalCSVV1", RequestNamespace="https://www.iatspayments.com/NetGate/", ResponseElementName="GetCreditCardJournalCSVV1Response", ResponseNamespace="https://www.iatspayments.com/NetGate/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetCreditCardJournalCSVV1Result")]
        public System.Xml.XmlNode GetCreditCardJournalCSV(string agentCode, string password, System.DateTime date, string customerIPAddress) {
            object[] results = this.Invoke("GetCreditCardJournalCSV", new object[] {
                        agentCode,
                        password,
                        date,
                        customerIPAddress});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetCreditCardJournalCSVAsync(string agentCode, string password, System.DateTime date, string customerIPAddress) {
            this.GetCreditCardJournalCSVAsync(agentCode, password, date, customerIPAddress, null);
        }
        
        /// <remarks/>
        public void GetCreditCardJournalCSVAsync(string agentCode, string password, System.DateTime date, string customerIPAddress, object userState) {
            if ((this.GetCreditCardJournalCSVOperationCompleted == null)) {
                this.GetCreditCardJournalCSVOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCreditCardJournalCSVOperationCompleted);
            }
            this.InvokeAsync("GetCreditCardJournalCSV", new object[] {
                        agentCode,
                        password,
                        date,
                        customerIPAddress}, this.GetCreditCardJournalCSVOperationCompleted, userState);
        }
        
        private void OnGetCreditCardJournalCSVOperationCompleted(object arg) {
            if ((this.GetCreditCardJournalCSVCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCreditCardJournalCSVCompleted(this, new GetCreditCardJournalCSVCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.iatspayments.com/NetGate/GetCreditCardJournalV1", RequestElementName="GetCreditCardJournalV1", RequestNamespace="https://www.iatspayments.com/NetGate/", ResponseElementName="GetCreditCardJournalV1Response", ResponseNamespace="https://www.iatspayments.com/NetGate/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetCreditCardJournalV1Result")]
        public System.Xml.XmlNode GetCreditCardJournal(string agentCode, string password, System.DateTime date, string customerIPAddress) {
            object[] results = this.Invoke("GetCreditCardJournal", new object[] {
                        agentCode,
                        password,
                        date,
                        customerIPAddress});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetCreditCardJournalAsync(string agentCode, string password, System.DateTime date, string customerIPAddress) {
            this.GetCreditCardJournalAsync(agentCode, password, date, customerIPAddress, null);
        }
        
        /// <remarks/>
        public void GetCreditCardJournalAsync(string agentCode, string password, System.DateTime date, string customerIPAddress, object userState) {
            if ((this.GetCreditCardJournalOperationCompleted == null)) {
                this.GetCreditCardJournalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCreditCardJournalOperationCompleted);
            }
            this.InvokeAsync("GetCreditCardJournal", new object[] {
                        agentCode,
                        password,
                        date,
                        customerIPAddress}, this.GetCreditCardJournalOperationCompleted, userState);
        }
        
        private void OnGetCreditCardJournalOperationCompleted(object arg) {
            if ((this.GetCreditCardJournalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCreditCardJournalCompleted(this, new GetCreditCardJournalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.iatspayments.com/NetGate/GetCreditCardPaymentBoxJournalCSVV1", RequestElementName="GetCreditCardPaymentBoxJournalCSVV1", RequestNamespace="https://www.iatspayments.com/NetGate/", ResponseElementName="GetCreditCardPaymentBoxJournalCSVV1Response", ResponseNamespace="https://www.iatspayments.com/NetGate/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetCreditCardPaymentBoxJournalCSVV1Result")]
        public System.Xml.XmlNode GetCreditCardPaymentBoxJournalCSV(string agentCode, string password, System.DateTime fromDate, System.DateTime toDate, string customerIPAddress) {
            object[] results = this.Invoke("GetCreditCardPaymentBoxJournalCSV", new object[] {
                        agentCode,
                        password,
                        fromDate,
                        toDate,
                        customerIPAddress});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetCreditCardPaymentBoxJournalCSVAsync(string agentCode, string password, System.DateTime fromDate, System.DateTime toDate, string customerIPAddress) {
            this.GetCreditCardPaymentBoxJournalCSVAsync(agentCode, password, fromDate, toDate, customerIPAddress, null);
        }
        
        /// <remarks/>
        public void GetCreditCardPaymentBoxJournalCSVAsync(string agentCode, string password, System.DateTime fromDate, System.DateTime toDate, string customerIPAddress, object userState) {
            if ((this.GetCreditCardPaymentBoxJournalCSVOperationCompleted == null)) {
                this.GetCreditCardPaymentBoxJournalCSVOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCreditCardPaymentBoxJournalCSVOperationCompleted);
            }
            this.InvokeAsync("GetCreditCardPaymentBoxJournalCSV", new object[] {
                        agentCode,
                        password,
                        fromDate,
                        toDate,
                        customerIPAddress}, this.GetCreditCardPaymentBoxJournalCSVOperationCompleted, userState);
        }
        
        private void OnGetCreditCardPaymentBoxJournalCSVOperationCompleted(object arg) {
            if ((this.GetCreditCardPaymentBoxJournalCSVCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCreditCardPaymentBoxJournalCSVCompleted(this, new GetCreditCardPaymentBoxJournalCSVCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.iatspayments.com/NetGate/GetCreditCardPaymentBoxJournalCSVV2", RequestNamespace="https://www.iatspayments.com/NetGate/", ResponseNamespace="https://www.iatspayments.com/NetGate/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetCreditCardPaymentBoxJournalCSVV2(string agentCode, string password, System.DateTime fromDate, System.DateTime toDate, string customerIPAddress, int startIndex, int endIndex) {
            object[] results = this.Invoke("GetCreditCardPaymentBoxJournalCSVV2", new object[] {
                        agentCode,
                        password,
                        fromDate,
                        toDate,
                        customerIPAddress,
                        startIndex,
                        endIndex});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetCreditCardPaymentBoxJournalCSVV2Async(string agentCode, string password, System.DateTime fromDate, System.DateTime toDate, string customerIPAddress, int startIndex, int endIndex) {
            this.GetCreditCardPaymentBoxJournalCSVV2Async(agentCode, password, fromDate, toDate, customerIPAddress, startIndex, endIndex, null);
        }
        
        /// <remarks/>
        public void GetCreditCardPaymentBoxJournalCSVV2Async(string agentCode, string password, System.DateTime fromDate, System.DateTime toDate, string customerIPAddress, int startIndex, int endIndex, object userState) {
            if ((this.GetCreditCardPaymentBoxJournalCSVV2OperationCompleted == null)) {
                this.GetCreditCardPaymentBoxJournalCSVV2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCreditCardPaymentBoxJournalCSVV2OperationCompleted);
            }
            this.InvokeAsync("GetCreditCardPaymentBoxJournalCSVV2", new object[] {
                        agentCode,
                        password,
                        fromDate,
                        toDate,
                        customerIPAddress,
                        startIndex,
                        endIndex}, this.GetCreditCardPaymentBoxJournalCSVV2OperationCompleted, userState);
        }
        
        private void OnGetCreditCardPaymentBoxJournalCSVV2OperationCompleted(object arg) {
            if ((this.GetCreditCardPaymentBoxJournalCSVV2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCreditCardPaymentBoxJournalCSVV2Completed(this, new GetCreditCardPaymentBoxJournalCSVV2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.iatspayments.com/NetGate/GetCreditCardPaymentBoxRejectCSVV1", RequestElementName="GetCreditCardPaymentBoxRejectCSVV1", RequestNamespace="https://www.iatspayments.com/NetGate/", ResponseElementName="GetCreditCardPaymentBoxRejectCSVV1Response", ResponseNamespace="https://www.iatspayments.com/NetGate/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetCreditCardPaymentBoxRejectCSVV1Result")]
        public System.Xml.XmlNode GetCreditCardPaymentBoxRejectCSV(string agentCode, string password, System.DateTime fromDate, System.DateTime toDate, string customerIPAddress) {
            object[] results = this.Invoke("GetCreditCardPaymentBoxRejectCSV", new object[] {
                        agentCode,
                        password,
                        fromDate,
                        toDate,
                        customerIPAddress});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetCreditCardPaymentBoxRejectCSVAsync(string agentCode, string password, System.DateTime fromDate, System.DateTime toDate, string customerIPAddress) {
            this.GetCreditCardPaymentBoxRejectCSVAsync(agentCode, password, fromDate, toDate, customerIPAddress, null);
        }
        
        /// <remarks/>
        public void GetCreditCardPaymentBoxRejectCSVAsync(string agentCode, string password, System.DateTime fromDate, System.DateTime toDate, string customerIPAddress, object userState) {
            if ((this.GetCreditCardPaymentBoxRejectCSVOperationCompleted == null)) {
                this.GetCreditCardPaymentBoxRejectCSVOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCreditCardPaymentBoxRejectCSVOperationCompleted);
            }
            this.InvokeAsync("GetCreditCardPaymentBoxRejectCSV", new object[] {
                        agentCode,
                        password,
                        fromDate,
                        toDate,
                        customerIPAddress}, this.GetCreditCardPaymentBoxRejectCSVOperationCompleted, userState);
        }
        
        private void OnGetCreditCardPaymentBoxRejectCSVOperationCompleted(object arg) {
            if ((this.GetCreditCardPaymentBoxRejectCSVCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCreditCardPaymentBoxRejectCSVCompleted(this, new GetCreditCardPaymentBoxRejectCSVCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.iatspayments.com/NetGate/GetCreditCardPaymentBoxRejectCSVV2", RequestNamespace="https://www.iatspayments.com/NetGate/", ResponseNamespace="https://www.iatspayments.com/NetGate/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetCreditCardPaymentBoxRejectCSVV2(string agentCode, string password, System.DateTime fromDate, System.DateTime toDate, string customerIPAddress, int startIndex, int endIndex) {
            object[] results = this.Invoke("GetCreditCardPaymentBoxRejectCSVV2", new object[] {
                        agentCode,
                        password,
                        fromDate,
                        toDate,
                        customerIPAddress,
                        startIndex,
                        endIndex});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetCreditCardPaymentBoxRejectCSVV2Async(string agentCode, string password, System.DateTime fromDate, System.DateTime toDate, string customerIPAddress, int startIndex, int endIndex) {
            this.GetCreditCardPaymentBoxRejectCSVV2Async(agentCode, password, fromDate, toDate, customerIPAddress, startIndex, endIndex, null);
        }
        
        /// <remarks/>
        public void GetCreditCardPaymentBoxRejectCSVV2Async(string agentCode, string password, System.DateTime fromDate, System.DateTime toDate, string customerIPAddress, int startIndex, int endIndex, object userState) {
            if ((this.GetCreditCardPaymentBoxRejectCSVV2OperationCompleted == null)) {
                this.GetCreditCardPaymentBoxRejectCSVV2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCreditCardPaymentBoxRejectCSVV2OperationCompleted);
            }
            this.InvokeAsync("GetCreditCardPaymentBoxRejectCSVV2", new object[] {
                        agentCode,
                        password,
                        fromDate,
                        toDate,
                        customerIPAddress,
                        startIndex,
                        endIndex}, this.GetCreditCardPaymentBoxRejectCSVV2OperationCompleted, userState);
        }
        
        private void OnGetCreditCardPaymentBoxRejectCSVV2OperationCompleted(object arg) {
            if ((this.GetCreditCardPaymentBoxRejectCSVV2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCreditCardPaymentBoxRejectCSVV2Completed(this, new GetCreditCardPaymentBoxRejectCSVV2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.iatspayments.com/NetGate/GetCreditCardRejectCSVV1", RequestElementName="GetCreditCardRejectCSVV1", RequestNamespace="https://www.iatspayments.com/NetGate/", ResponseElementName="GetCreditCardRejectCSVV1Response", ResponseNamespace="https://www.iatspayments.com/NetGate/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetCreditCardRejectCSVV1Result")]
        public System.Xml.XmlNode GetCreditCardRejectCSV(string agentCode, string password, System.DateTime date, string customerIPAddress) {
            object[] results = this.Invoke("GetCreditCardRejectCSV", new object[] {
                        agentCode,
                        password,
                        date,
                        customerIPAddress});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetCreditCardRejectCSVAsync(string agentCode, string password, System.DateTime date, string customerIPAddress) {
            this.GetCreditCardRejectCSVAsync(agentCode, password, date, customerIPAddress, null);
        }
        
        /// <remarks/>
        public void GetCreditCardRejectCSVAsync(string agentCode, string password, System.DateTime date, string customerIPAddress, object userState) {
            if ((this.GetCreditCardRejectCSVOperationCompleted == null)) {
                this.GetCreditCardRejectCSVOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCreditCardRejectCSVOperationCompleted);
            }
            this.InvokeAsync("GetCreditCardRejectCSV", new object[] {
                        agentCode,
                        password,
                        date,
                        customerIPAddress}, this.GetCreditCardRejectCSVOperationCompleted, userState);
        }
        
        private void OnGetCreditCardRejectCSVOperationCompleted(object arg) {
            if ((this.GetCreditCardRejectCSVCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCreditCardRejectCSVCompleted(this, new GetCreditCardRejectCSVCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.iatspayments.com/NetGate/GetCreditCardRejectV1", RequestElementName="GetCreditCardRejectV1", RequestNamespace="https://www.iatspayments.com/NetGate/", ResponseElementName="GetCreditCardRejectV1Response", ResponseNamespace="https://www.iatspayments.com/NetGate/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetCreditCardRejectV1Result")]
        public System.Xml.XmlNode GetCreditCardReject(string agentCode, string password, System.DateTime date, string customerIPAddress) {
            object[] results = this.Invoke("GetCreditCardReject", new object[] {
                        agentCode,
                        password,
                        date,
                        customerIPAddress});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetCreditCardRejectAsync(string agentCode, string password, System.DateTime date, string customerIPAddress) {
            this.GetCreditCardRejectAsync(agentCode, password, date, customerIPAddress, null);
        }
        
        /// <remarks/>
        public void GetCreditCardRejectAsync(string agentCode, string password, System.DateTime date, string customerIPAddress, object userState) {
            if ((this.GetCreditCardRejectOperationCompleted == null)) {
                this.GetCreditCardRejectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCreditCardRejectOperationCompleted);
            }
            this.InvokeAsync("GetCreditCardReject", new object[] {
                        agentCode,
                        password,
                        date,
                        customerIPAddress}, this.GetCreditCardRejectOperationCompleted, userState);
        }
        
        private void OnGetCreditCardRejectOperationCompleted(object arg) {
            if ((this.GetCreditCardRejectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCreditCardRejectCompleted(this, new GetCreditCardRejectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.iatspayments.com/NetGate/GetACHEFTBankReconciliationReportCSVV1", RequestElementName="GetACHEFTBankReconciliationReportCSVV1", RequestNamespace="https://www.iatspayments.com/NetGate/", ResponseElementName="GetACHEFTBankReconciliationReportCSVV1Response", ResponseNamespace="https://www.iatspayments.com/NetGate/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetACHEFTBankReconciliationReportCSVV1Result")]
        public System.Xml.XmlNode GetACHEFTBankReconciliationReportCSV(string agentCode, string password, System.DateTime fromDate, System.DateTime toDate, string currency, bool summaryOnly, string customerIPAddress) {
            object[] results = this.Invoke("GetACHEFTBankReconciliationReportCSV", new object[] {
                        agentCode,
                        password,
                        fromDate,
                        toDate,
                        currency,
                        summaryOnly,
                        customerIPAddress});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetACHEFTBankReconciliationReportCSVAsync(string agentCode, string password, System.DateTime fromDate, System.DateTime toDate, string currency, bool summaryOnly, string customerIPAddress) {
            this.GetACHEFTBankReconciliationReportCSVAsync(agentCode, password, fromDate, toDate, currency, summaryOnly, customerIPAddress, null);
        }
        
        /// <remarks/>
        public void GetACHEFTBankReconciliationReportCSVAsync(string agentCode, string password, System.DateTime fromDate, System.DateTime toDate, string currency, bool summaryOnly, string customerIPAddress, object userState) {
            if ((this.GetACHEFTBankReconciliationReportCSVOperationCompleted == null)) {
                this.GetACHEFTBankReconciliationReportCSVOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetACHEFTBankReconciliationReportCSVOperationCompleted);
            }
            this.InvokeAsync("GetACHEFTBankReconciliationReportCSV", new object[] {
                        agentCode,
                        password,
                        fromDate,
                        toDate,
                        currency,
                        summaryOnly,
                        customerIPAddress}, this.GetACHEFTBankReconciliationReportCSVOperationCompleted, userState);
        }
        
        private void OnGetACHEFTBankReconciliationReportCSVOperationCompleted(object arg) {
            if ((this.GetACHEFTBankReconciliationReportCSVCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetACHEFTBankReconciliationReportCSVCompleted(this, new GetACHEFTBankReconciliationReportCSVCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.iatspayments.com/NetGate/GetACHEFTJournalCSVV1", RequestElementName="GetACHEFTJournalCSVV1", RequestNamespace="https://www.iatspayments.com/NetGate/", ResponseElementName="GetACHEFTJournalCSVV1Response", ResponseNamespace="https://www.iatspayments.com/NetGate/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetACHEFTJournalCSVV1Result")]
        public System.Xml.XmlNode GetACHEFTJournalCSV(string agentCode, string password, System.DateTime date, string customerIPAddress) {
            object[] results = this.Invoke("GetACHEFTJournalCSV", new object[] {
                        agentCode,
                        password,
                        date,
                        customerIPAddress});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetACHEFTJournalCSVAsync(string agentCode, string password, System.DateTime date, string customerIPAddress) {
            this.GetACHEFTJournalCSVAsync(agentCode, password, date, customerIPAddress, null);
        }
        
        /// <remarks/>
        public void GetACHEFTJournalCSVAsync(string agentCode, string password, System.DateTime date, string customerIPAddress, object userState) {
            if ((this.GetACHEFTJournalCSVOperationCompleted == null)) {
                this.GetACHEFTJournalCSVOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetACHEFTJournalCSVOperationCompleted);
            }
            this.InvokeAsync("GetACHEFTJournalCSV", new object[] {
                        agentCode,
                        password,
                        date,
                        customerIPAddress}, this.GetACHEFTJournalCSVOperationCompleted, userState);
        }
        
        private void OnGetACHEFTJournalCSVOperationCompleted(object arg) {
            if ((this.GetACHEFTJournalCSVCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetACHEFTJournalCSVCompleted(this, new GetACHEFTJournalCSVCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.iatspayments.com/NetGate/GetACHEFTJournalV1", RequestElementName="GetACHEFTJournalV1", RequestNamespace="https://www.iatspayments.com/NetGate/", ResponseElementName="GetACHEFTJournalV1Response", ResponseNamespace="https://www.iatspayments.com/NetGate/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetACHEFTJournalV1Result")]
        public System.Xml.XmlNode GetACHEFTJournal(string agentCode, string password, System.DateTime date, string customerIPAddress) {
            object[] results = this.Invoke("GetACHEFTJournal", new object[] {
                        agentCode,
                        password,
                        date,
                        customerIPAddress});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetACHEFTJournalAsync(string agentCode, string password, System.DateTime date, string customerIPAddress) {
            this.GetACHEFTJournalAsync(agentCode, password, date, customerIPAddress, null);
        }
        
        /// <remarks/>
        public void GetACHEFTJournalAsync(string agentCode, string password, System.DateTime date, string customerIPAddress, object userState) {
            if ((this.GetACHEFTJournalOperationCompleted == null)) {
                this.GetACHEFTJournalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetACHEFTJournalOperationCompleted);
            }
            this.InvokeAsync("GetACHEFTJournal", new object[] {
                        agentCode,
                        password,
                        date,
                        customerIPAddress}, this.GetACHEFTJournalOperationCompleted, userState);
        }
        
        private void OnGetACHEFTJournalOperationCompleted(object arg) {
            if ((this.GetACHEFTJournalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetACHEFTJournalCompleted(this, new GetACHEFTJournalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.iatspayments.com/NetGate/GetACHEFTPaymentBoxJournalCSVV1", RequestElementName="GetACHEFTPaymentBoxJournalCSVV1", RequestNamespace="https://www.iatspayments.com/NetGate/", ResponseElementName="GetACHEFTPaymentBoxJournalCSVV1Response", ResponseNamespace="https://www.iatspayments.com/NetGate/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetACHEFTPaymentBoxJournalCSVV1Result")]
        public System.Xml.XmlNode GetACHEFTPaymentBoxJournalCSV(string agentCode, string password, System.DateTime fromDate, System.DateTime toDate, string customerIPAddress) {
            object[] results = this.Invoke("GetACHEFTPaymentBoxJournalCSV", new object[] {
                        agentCode,
                        password,
                        fromDate,
                        toDate,
                        customerIPAddress});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetACHEFTPaymentBoxJournalCSVAsync(string agentCode, string password, System.DateTime fromDate, System.DateTime toDate, string customerIPAddress) {
            this.GetACHEFTPaymentBoxJournalCSVAsync(agentCode, password, fromDate, toDate, customerIPAddress, null);
        }
        
        /// <remarks/>
        public void GetACHEFTPaymentBoxJournalCSVAsync(string agentCode, string password, System.DateTime fromDate, System.DateTime toDate, string customerIPAddress, object userState) {
            if ((this.GetACHEFTPaymentBoxJournalCSVOperationCompleted == null)) {
                this.GetACHEFTPaymentBoxJournalCSVOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetACHEFTPaymentBoxJournalCSVOperationCompleted);
            }
            this.InvokeAsync("GetACHEFTPaymentBoxJournalCSV", new object[] {
                        agentCode,
                        password,
                        fromDate,
                        toDate,
                        customerIPAddress}, this.GetACHEFTPaymentBoxJournalCSVOperationCompleted, userState);
        }
        
        private void OnGetACHEFTPaymentBoxJournalCSVOperationCompleted(object arg) {
            if ((this.GetACHEFTPaymentBoxJournalCSVCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetACHEFTPaymentBoxJournalCSVCompleted(this, new GetACHEFTPaymentBoxJournalCSVCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.iatspayments.com/NetGate/GetACHEFTPaymentBoxJournalCSVV2", RequestNamespace="https://www.iatspayments.com/NetGate/", ResponseNamespace="https://www.iatspayments.com/NetGate/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetACHEFTPaymentBoxJournalCSVV2(string agentCode, string password, System.DateTime fromDate, System.DateTime toDate, string customerIPAddress) {
            object[] results = this.Invoke("GetACHEFTPaymentBoxJournalCSVV2", new object[] {
                        agentCode,
                        password,
                        fromDate,
                        toDate,
                        customerIPAddress});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetACHEFTPaymentBoxJournalCSVV2Async(string agentCode, string password, System.DateTime fromDate, System.DateTime toDate, string customerIPAddress) {
            this.GetACHEFTPaymentBoxJournalCSVV2Async(agentCode, password, fromDate, toDate, customerIPAddress, null);
        }
        
        /// <remarks/>
        public void GetACHEFTPaymentBoxJournalCSVV2Async(string agentCode, string password, System.DateTime fromDate, System.DateTime toDate, string customerIPAddress, object userState) {
            if ((this.GetACHEFTPaymentBoxJournalCSVV2OperationCompleted == null)) {
                this.GetACHEFTPaymentBoxJournalCSVV2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetACHEFTPaymentBoxJournalCSVV2OperationCompleted);
            }
            this.InvokeAsync("GetACHEFTPaymentBoxJournalCSVV2", new object[] {
                        agentCode,
                        password,
                        fromDate,
                        toDate,
                        customerIPAddress}, this.GetACHEFTPaymentBoxJournalCSVV2OperationCompleted, userState);
        }
        
        private void OnGetACHEFTPaymentBoxJournalCSVV2OperationCompleted(object arg) {
            if ((this.GetACHEFTPaymentBoxJournalCSVV2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetACHEFTPaymentBoxJournalCSVV2Completed(this, new GetACHEFTPaymentBoxJournalCSVV2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.iatspayments.com/NetGate/GetACHEFTPaymentBoxJournalCSVV3", RequestNamespace="https://www.iatspayments.com/NetGate/", ResponseNamespace="https://www.iatspayments.com/NetGate/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetACHEFTPaymentBoxJournalCSVV3(string agentCode, string password, System.DateTime fromDate, System.DateTime toDate, string customerIPAddress, int startIndex, int endIndex) {
            object[] results = this.Invoke("GetACHEFTPaymentBoxJournalCSVV3", new object[] {
                        agentCode,
                        password,
                        fromDate,
                        toDate,
                        customerIPAddress,
                        startIndex,
                        endIndex});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetACHEFTPaymentBoxJournalCSVV3Async(string agentCode, string password, System.DateTime fromDate, System.DateTime toDate, string customerIPAddress, int startIndex, int endIndex) {
            this.GetACHEFTPaymentBoxJournalCSVV3Async(agentCode, password, fromDate, toDate, customerIPAddress, startIndex, endIndex, null);
        }
        
        /// <remarks/>
        public void GetACHEFTPaymentBoxJournalCSVV3Async(string agentCode, string password, System.DateTime fromDate, System.DateTime toDate, string customerIPAddress, int startIndex, int endIndex, object userState) {
            if ((this.GetACHEFTPaymentBoxJournalCSVV3OperationCompleted == null)) {
                this.GetACHEFTPaymentBoxJournalCSVV3OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetACHEFTPaymentBoxJournalCSVV3OperationCompleted);
            }
            this.InvokeAsync("GetACHEFTPaymentBoxJournalCSVV3", new object[] {
                        agentCode,
                        password,
                        fromDate,
                        toDate,
                        customerIPAddress,
                        startIndex,
                        endIndex}, this.GetACHEFTPaymentBoxJournalCSVV3OperationCompleted, userState);
        }
        
        private void OnGetACHEFTPaymentBoxJournalCSVV3OperationCompleted(object arg) {
            if ((this.GetACHEFTPaymentBoxJournalCSVV3Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetACHEFTPaymentBoxJournalCSVV3Completed(this, new GetACHEFTPaymentBoxJournalCSVV3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="GetACHEFTPaymentBoxJournalCSV1")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.iatspayments.com/NetGate/GetACHEFTPaymentBoxJournalCSV V1", RequestElementName="GetACHEFTPaymentBoxJournalCSV V1", RequestNamespace="https://www.iatspayments.com/NetGate/", ResponseElementName="GetACHEFTPaymentBoxJournalCSV V1Response", ResponseNamespace="https://www.iatspayments.com/NetGate/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetACHEFTPaymentBoxJournalCSV V1Result", DataType="base64Binary")]
        public byte[] GetACHEFTPaymentBoxJournalCSV(string agentCode, string password, System.DateTime from, System.DateTime to) {
            object[] results = this.Invoke("GetACHEFTPaymentBoxJournalCSV1", new object[] {
                        agentCode,
                        password,
                        from,
                        to});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetACHEFTPaymentBoxJournalCSV1Async(string agentCode, string password, System.DateTime from, System.DateTime to) {
            this.GetACHEFTPaymentBoxJournalCSV1Async(agentCode, password, from, to, null);
        }
        
        /// <remarks/>
        public void GetACHEFTPaymentBoxJournalCSV1Async(string agentCode, string password, System.DateTime from, System.DateTime to, object userState) {
            if ((this.GetACHEFTPaymentBoxJournalCSV1OperationCompleted == null)) {
                this.GetACHEFTPaymentBoxJournalCSV1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetACHEFTPaymentBoxJournalCSV1OperationCompleted);
            }
            this.InvokeAsync("GetACHEFTPaymentBoxJournalCSV1", new object[] {
                        agentCode,
                        password,
                        from,
                        to}, this.GetACHEFTPaymentBoxJournalCSV1OperationCompleted, userState);
        }
        
        private void OnGetACHEFTPaymentBoxJournalCSV1OperationCompleted(object arg) {
            if ((this.GetACHEFTPaymentBoxJournalCSV1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetACHEFTPaymentBoxJournalCSV1Completed(this, new GetACHEFTPaymentBoxJournalCSV1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.iatspayments.com/NetGate/GetACHEFTPaymentBoxRejectCSVV1", RequestElementName="GetACHEFTPaymentBoxRejectCSVV1", RequestNamespace="https://www.iatspayments.com/NetGate/", ResponseElementName="GetACHEFTPaymentBoxRejectCSVV1Response", ResponseNamespace="https://www.iatspayments.com/NetGate/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetACHEFTPaymentBoxRejectCSVV1Result")]
        public System.Xml.XmlNode GetACHEFTPaymentBoxRejectCSV(string agentCode, string password, System.DateTime fromDate, System.DateTime toDate, string customerIPAddress) {
            object[] results = this.Invoke("GetACHEFTPaymentBoxRejectCSV", new object[] {
                        agentCode,
                        password,
                        fromDate,
                        toDate,
                        customerIPAddress});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetACHEFTPaymentBoxRejectCSVAsync(string agentCode, string password, System.DateTime fromDate, System.DateTime toDate, string customerIPAddress) {
            this.GetACHEFTPaymentBoxRejectCSVAsync(agentCode, password, fromDate, toDate, customerIPAddress, null);
        }
        
        /// <remarks/>
        public void GetACHEFTPaymentBoxRejectCSVAsync(string agentCode, string password, System.DateTime fromDate, System.DateTime toDate, string customerIPAddress, object userState) {
            if ((this.GetACHEFTPaymentBoxRejectCSVOperationCompleted == null)) {
                this.GetACHEFTPaymentBoxRejectCSVOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetACHEFTPaymentBoxRejectCSVOperationCompleted);
            }
            this.InvokeAsync("GetACHEFTPaymentBoxRejectCSV", new object[] {
                        agentCode,
                        password,
                        fromDate,
                        toDate,
                        customerIPAddress}, this.GetACHEFTPaymentBoxRejectCSVOperationCompleted, userState);
        }
        
        private void OnGetACHEFTPaymentBoxRejectCSVOperationCompleted(object arg) {
            if ((this.GetACHEFTPaymentBoxRejectCSVCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetACHEFTPaymentBoxRejectCSVCompleted(this, new GetACHEFTPaymentBoxRejectCSVCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.iatspayments.com/NetGate/GetACHEFTPaymentBoxRejectCSVV2", RequestNamespace="https://www.iatspayments.com/NetGate/", ResponseNamespace="https://www.iatspayments.com/NetGate/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetACHEFTPaymentBoxRejectCSVV2(string agentCode, string password, System.DateTime fromDate, System.DateTime toDate, string customerIPAddress, int startIndex, int endIndex) {
            object[] results = this.Invoke("GetACHEFTPaymentBoxRejectCSVV2", new object[] {
                        agentCode,
                        password,
                        fromDate,
                        toDate,
                        customerIPAddress,
                        startIndex,
                        endIndex});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetACHEFTPaymentBoxRejectCSVV2Async(string agentCode, string password, System.DateTime fromDate, System.DateTime toDate, string customerIPAddress, int startIndex, int endIndex) {
            this.GetACHEFTPaymentBoxRejectCSVV2Async(agentCode, password, fromDate, toDate, customerIPAddress, startIndex, endIndex, null);
        }
        
        /// <remarks/>
        public void GetACHEFTPaymentBoxRejectCSVV2Async(string agentCode, string password, System.DateTime fromDate, System.DateTime toDate, string customerIPAddress, int startIndex, int endIndex, object userState) {
            if ((this.GetACHEFTPaymentBoxRejectCSVV2OperationCompleted == null)) {
                this.GetACHEFTPaymentBoxRejectCSVV2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetACHEFTPaymentBoxRejectCSVV2OperationCompleted);
            }
            this.InvokeAsync("GetACHEFTPaymentBoxRejectCSVV2", new object[] {
                        agentCode,
                        password,
                        fromDate,
                        toDate,
                        customerIPAddress,
                        startIndex,
                        endIndex}, this.GetACHEFTPaymentBoxRejectCSVV2OperationCompleted, userState);
        }
        
        private void OnGetACHEFTPaymentBoxRejectCSVV2OperationCompleted(object arg) {
            if ((this.GetACHEFTPaymentBoxRejectCSVV2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetACHEFTPaymentBoxRejectCSVV2Completed(this, new GetACHEFTPaymentBoxRejectCSVV2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.iatspayments.com/NetGate/GetACHEFTPaymentBoxReturnCSVV1", RequestNamespace="https://www.iatspayments.com/NetGate/", ResponseNamespace="https://www.iatspayments.com/NetGate/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetACHEFTPaymentBoxReturnCSVV1(string agentCode, string password, System.DateTime fromDate, System.DateTime toDate, string customerIPAddress) {
            object[] results = this.Invoke("GetACHEFTPaymentBoxReturnCSVV1", new object[] {
                        agentCode,
                        password,
                        fromDate,
                        toDate,
                        customerIPAddress});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetACHEFTPaymentBoxReturnCSVV1Async(string agentCode, string password, System.DateTime fromDate, System.DateTime toDate, string customerIPAddress) {
            this.GetACHEFTPaymentBoxReturnCSVV1Async(agentCode, password, fromDate, toDate, customerIPAddress, null);
        }
        
        /// <remarks/>
        public void GetACHEFTPaymentBoxReturnCSVV1Async(string agentCode, string password, System.DateTime fromDate, System.DateTime toDate, string customerIPAddress, object userState) {
            if ((this.GetACHEFTPaymentBoxReturnCSVV1OperationCompleted == null)) {
                this.GetACHEFTPaymentBoxReturnCSVV1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetACHEFTPaymentBoxReturnCSVV1OperationCompleted);
            }
            this.InvokeAsync("GetACHEFTPaymentBoxReturnCSVV1", new object[] {
                        agentCode,
                        password,
                        fromDate,
                        toDate,
                        customerIPAddress}, this.GetACHEFTPaymentBoxReturnCSVV1OperationCompleted, userState);
        }
        
        private void OnGetACHEFTPaymentBoxReturnCSVV1OperationCompleted(object arg) {
            if ((this.GetACHEFTPaymentBoxReturnCSVV1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetACHEFTPaymentBoxReturnCSVV1Completed(this, new GetACHEFTPaymentBoxReturnCSVV1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.iatspayments.com/NetGate/GetACHEFTRejectCSVV1", RequestElementName="GetACHEFTRejectCSVV1", RequestNamespace="https://www.iatspayments.com/NetGate/", ResponseElementName="GetACHEFTRejectCSVV1Response", ResponseNamespace="https://www.iatspayments.com/NetGate/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetACHEFTRejectCSVV1Result")]
        public System.Xml.XmlNode GetACHEFTRejectCSV(string agentCode, string password, System.DateTime date, string customerIPAddress) {
            object[] results = this.Invoke("GetACHEFTRejectCSV", new object[] {
                        agentCode,
                        password,
                        date,
                        customerIPAddress});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetACHEFTRejectCSVAsync(string agentCode, string password, System.DateTime date, string customerIPAddress) {
            this.GetACHEFTRejectCSVAsync(agentCode, password, date, customerIPAddress, null);
        }
        
        /// <remarks/>
        public void GetACHEFTRejectCSVAsync(string agentCode, string password, System.DateTime date, string customerIPAddress, object userState) {
            if ((this.GetACHEFTRejectCSVOperationCompleted == null)) {
                this.GetACHEFTRejectCSVOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetACHEFTRejectCSVOperationCompleted);
            }
            this.InvokeAsync("GetACHEFTRejectCSV", new object[] {
                        agentCode,
                        password,
                        date,
                        customerIPAddress}, this.GetACHEFTRejectCSVOperationCompleted, userState);
        }
        
        private void OnGetACHEFTRejectCSVOperationCompleted(object arg) {
            if ((this.GetACHEFTRejectCSVCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetACHEFTRejectCSVCompleted(this, new GetACHEFTRejectCSVCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.iatspayments.com/NetGate/GetACHEFTRejectV1", RequestElementName="GetACHEFTRejectV1", RequestNamespace="https://www.iatspayments.com/NetGate/", ResponseElementName="GetACHEFTRejectV1Response", ResponseNamespace="https://www.iatspayments.com/NetGate/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetACHEFTRejectV1Result")]
        public System.Xml.XmlNode GetACHEFTReject(string agentCode, string password, System.DateTime date, string customerIPAddress) {
            object[] results = this.Invoke("GetACHEFTReject", new object[] {
                        agentCode,
                        password,
                        date,
                        customerIPAddress});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetACHEFTRejectAsync(string agentCode, string password, System.DateTime date, string customerIPAddress) {
            this.GetACHEFTRejectAsync(agentCode, password, date, customerIPAddress, null);
        }
        
        /// <remarks/>
        public void GetACHEFTRejectAsync(string agentCode, string password, System.DateTime date, string customerIPAddress, object userState) {
            if ((this.GetACHEFTRejectOperationCompleted == null)) {
                this.GetACHEFTRejectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetACHEFTRejectOperationCompleted);
            }
            this.InvokeAsync("GetACHEFTReject", new object[] {
                        agentCode,
                        password,
                        date,
                        customerIPAddress}, this.GetACHEFTRejectOperationCompleted, userState);
        }
        
        private void OnGetACHEFTRejectOperationCompleted(object arg) {
            if ((this.GetACHEFTRejectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetACHEFTRejectCompleted(this, new GetACHEFTRejectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.iatspayments.com/NetGate/GetACHEFTReturnCSVV1", RequestElementName="GetACHEFTReturnCSVV1", RequestNamespace="https://www.iatspayments.com/NetGate/", ResponseElementName="GetACHEFTReturnCSVV1Response", ResponseNamespace="https://www.iatspayments.com/NetGate/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetACHEFTReturnCSVV1Result")]
        public System.Xml.XmlNode GetACHEFTReturnCSV(string agentCode, string password, System.DateTime date, string customerIPAddress) {
            object[] results = this.Invoke("GetACHEFTReturnCSV", new object[] {
                        agentCode,
                        password,
                        date,
                        customerIPAddress});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetACHEFTReturnCSVAsync(string agentCode, string password, System.DateTime date, string customerIPAddress) {
            this.GetACHEFTReturnCSVAsync(agentCode, password, date, customerIPAddress, null);
        }
        
        /// <remarks/>
        public void GetACHEFTReturnCSVAsync(string agentCode, string password, System.DateTime date, string customerIPAddress, object userState) {
            if ((this.GetACHEFTReturnCSVOperationCompleted == null)) {
                this.GetACHEFTReturnCSVOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetACHEFTReturnCSVOperationCompleted);
            }
            this.InvokeAsync("GetACHEFTReturnCSV", new object[] {
                        agentCode,
                        password,
                        date,
                        customerIPAddress}, this.GetACHEFTReturnCSVOperationCompleted, userState);
        }
        
        private void OnGetACHEFTReturnCSVOperationCompleted(object arg) {
            if ((this.GetACHEFTReturnCSVCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetACHEFTReturnCSVCompleted(this, new GetACHEFTReturnCSVCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.iatspayments.com/NetGate/GetACHEFTReturnV1", RequestElementName="GetACHEFTReturnV1", RequestNamespace="https://www.iatspayments.com/NetGate/", ResponseElementName="GetACHEFTReturnV1Response", ResponseNamespace="https://www.iatspayments.com/NetGate/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetACHEFTReturnV1Result")]
        public System.Xml.XmlNode GetACHEFTReturn(string agentCode, string password, System.DateTime date, string customerIPAddress) {
            object[] results = this.Invoke("GetACHEFTReturn", new object[] {
                        agentCode,
                        password,
                        date,
                        customerIPAddress});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetACHEFTReturnAsync(string agentCode, string password, System.DateTime date, string customerIPAddress) {
            this.GetACHEFTReturnAsync(agentCode, password, date, customerIPAddress, null);
        }
        
        /// <remarks/>
        public void GetACHEFTReturnAsync(string agentCode, string password, System.DateTime date, string customerIPAddress, object userState) {
            if ((this.GetACHEFTReturnOperationCompleted == null)) {
                this.GetACHEFTReturnOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetACHEFTReturnOperationCompleted);
            }
            this.InvokeAsync("GetACHEFTReturn", new object[] {
                        agentCode,
                        password,
                        date,
                        customerIPAddress}, this.GetACHEFTReturnOperationCompleted, userState);
        }
        
        private void OnGetACHEFTReturnOperationCompleted(object arg) {
            if ((this.GetACHEFTReturnCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetACHEFTReturnCompleted(this, new GetACHEFTReturnCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.iatspayments.com/NetGate/GetACHJournalCSV V1", RequestElementName="GetACHJournalCSV V1", RequestNamespace="https://www.iatspayments.com/NetGate/", ResponseElementName="GetACHJournalCSV V1Response", ResponseNamespace="https://www.iatspayments.com/NetGate/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetACHJournalCSV V1Result", DataType="base64Binary")]
        public byte[] GetACHJournalCSV(string agentCode, string password, System.DateTime date) {
            object[] results = this.Invoke("GetACHJournalCSV", new object[] {
                        agentCode,
                        password,
                        date});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetACHJournalCSVAsync(string agentCode, string password, System.DateTime date) {
            this.GetACHJournalCSVAsync(agentCode, password, date, null);
        }
        
        /// <remarks/>
        public void GetACHJournalCSVAsync(string agentCode, string password, System.DateTime date, object userState) {
            if ((this.GetACHJournalCSVOperationCompleted == null)) {
                this.GetACHJournalCSVOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetACHJournalCSVOperationCompleted);
            }
            this.InvokeAsync("GetACHJournalCSV", new object[] {
                        agentCode,
                        password,
                        date}, this.GetACHJournalCSVOperationCompleted, userState);
        }
        
        private void OnGetACHJournalCSVOperationCompleted(object arg) {
            if ((this.GetACHJournalCSVCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetACHJournalCSVCompleted(this, new GetACHJournalCSVCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetCCJournalCSVCompletedEventHandler(object sender, GetCCJournalCSVCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCCJournalCSVCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCCJournalCSVCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetCCPaymentBoxJournalCSVV2CompletedEventHandler(object sender, GetCCPaymentBoxJournalCSVV2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCCPaymentBoxJournalCSVV2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCCPaymentBoxJournalCSVV2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetCCPaymentBoxJournalCSVCompletedEventHandler(object sender, GetCCPaymentBoxJournalCSVCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCCPaymentBoxJournalCSVCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCCPaymentBoxJournalCSVCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetCreditCardBankReconciliationReportCSVCompletedEventHandler(object sender, GetCreditCardBankReconciliationReportCSVCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCreditCardBankReconciliationReportCSVCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCreditCardBankReconciliationReportCSVCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetCreditCardJournalCSVCompletedEventHandler(object sender, GetCreditCardJournalCSVCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCreditCardJournalCSVCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCreditCardJournalCSVCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetCreditCardJournalCompletedEventHandler(object sender, GetCreditCardJournalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCreditCardJournalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCreditCardJournalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetCreditCardPaymentBoxJournalCSVCompletedEventHandler(object sender, GetCreditCardPaymentBoxJournalCSVCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCreditCardPaymentBoxJournalCSVCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCreditCardPaymentBoxJournalCSVCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetCreditCardPaymentBoxJournalCSVV2CompletedEventHandler(object sender, GetCreditCardPaymentBoxJournalCSVV2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCreditCardPaymentBoxJournalCSVV2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCreditCardPaymentBoxJournalCSVV2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetCreditCardPaymentBoxRejectCSVCompletedEventHandler(object sender, GetCreditCardPaymentBoxRejectCSVCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCreditCardPaymentBoxRejectCSVCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCreditCardPaymentBoxRejectCSVCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetCreditCardPaymentBoxRejectCSVV2CompletedEventHandler(object sender, GetCreditCardPaymentBoxRejectCSVV2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCreditCardPaymentBoxRejectCSVV2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCreditCardPaymentBoxRejectCSVV2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetCreditCardRejectCSVCompletedEventHandler(object sender, GetCreditCardRejectCSVCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCreditCardRejectCSVCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCreditCardRejectCSVCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetCreditCardRejectCompletedEventHandler(object sender, GetCreditCardRejectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCreditCardRejectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCreditCardRejectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetACHEFTBankReconciliationReportCSVCompletedEventHandler(object sender, GetACHEFTBankReconciliationReportCSVCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetACHEFTBankReconciliationReportCSVCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetACHEFTBankReconciliationReportCSVCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetACHEFTJournalCSVCompletedEventHandler(object sender, GetACHEFTJournalCSVCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetACHEFTJournalCSVCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetACHEFTJournalCSVCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetACHEFTJournalCompletedEventHandler(object sender, GetACHEFTJournalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetACHEFTJournalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetACHEFTJournalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetACHEFTPaymentBoxJournalCSVCompletedEventHandler(object sender, GetACHEFTPaymentBoxJournalCSVCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetACHEFTPaymentBoxJournalCSVCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetACHEFTPaymentBoxJournalCSVCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetACHEFTPaymentBoxJournalCSVV2CompletedEventHandler(object sender, GetACHEFTPaymentBoxJournalCSVV2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetACHEFTPaymentBoxJournalCSVV2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetACHEFTPaymentBoxJournalCSVV2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetACHEFTPaymentBoxJournalCSVV3CompletedEventHandler(object sender, GetACHEFTPaymentBoxJournalCSVV3CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetACHEFTPaymentBoxJournalCSVV3CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetACHEFTPaymentBoxJournalCSVV3CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetACHEFTPaymentBoxJournalCSV1CompletedEventHandler(object sender, GetACHEFTPaymentBoxJournalCSV1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetACHEFTPaymentBoxJournalCSV1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetACHEFTPaymentBoxJournalCSV1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetACHEFTPaymentBoxRejectCSVCompletedEventHandler(object sender, GetACHEFTPaymentBoxRejectCSVCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetACHEFTPaymentBoxRejectCSVCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetACHEFTPaymentBoxRejectCSVCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetACHEFTPaymentBoxRejectCSVV2CompletedEventHandler(object sender, GetACHEFTPaymentBoxRejectCSVV2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetACHEFTPaymentBoxRejectCSVV2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetACHEFTPaymentBoxRejectCSVV2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetACHEFTPaymentBoxReturnCSVV1CompletedEventHandler(object sender, GetACHEFTPaymentBoxReturnCSVV1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetACHEFTPaymentBoxReturnCSVV1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetACHEFTPaymentBoxReturnCSVV1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetACHEFTRejectCSVCompletedEventHandler(object sender, GetACHEFTRejectCSVCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetACHEFTRejectCSVCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetACHEFTRejectCSVCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetACHEFTRejectCompletedEventHandler(object sender, GetACHEFTRejectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetACHEFTRejectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetACHEFTRejectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetACHEFTReturnCSVCompletedEventHandler(object sender, GetACHEFTReturnCSVCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetACHEFTReturnCSVCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetACHEFTReturnCSVCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetACHEFTReturnCompletedEventHandler(object sender, GetACHEFTReturnCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetACHEFTReturnCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetACHEFTReturnCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetACHJournalCSVCompletedEventHandler(object sender, GetACHJournalCSVCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetACHJournalCSVCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetACHJournalCSVCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591